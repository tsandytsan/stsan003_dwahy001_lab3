
stsan003_dwahy001_lab3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000142  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000857  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078e  00000000  00000000  00000a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002fa  00000000  00000000  0000120d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001508  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041c  00000000  00000000  0000152c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000289  00000000  00000000  00001948  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001bd1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
   2:	00 00       	nop
   4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
   6:	00 00       	nop
   8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
   a:	00 00       	nop
   c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
   e:	00 00       	nop
  10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
  12:	00 00       	nop
  14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
  16:	00 00       	nop
  18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
  1e:	00 00       	nop
  20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
  22:	00 00       	nop
  24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
  26:	00 00       	nop
  28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
  2e:	00 00       	nop
  30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
  32:	00 00       	nop
  34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
  36:	00 00       	nop
  38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
  3e:	00 00       	nop
  40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
  42:	00 00       	nop
  44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
  46:	00 00       	nop
  48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	37 c0       	rjmp	.+110    	; 0xbc <__bad_interrupt>
  4e:	00 00       	nop
  50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
  52:	00 00       	nop
  54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
  56:	00 00       	nop
  58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
  5e:	00 00       	nop
  60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
  62:	00 00       	nop
  64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
  66:	00 00       	nop
  68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
  6e:	00 00       	nop
  70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
  72:	00 00       	nop
  74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
  76:	00 00       	nop
  78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
  7e:	00 00       	nop
  80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
  82:	00 00       	nop
  84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
  86:	00 00       	nop
  88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	6f 00       	.word	0x006f	; ????
  8e:	71 00       	.word	0x0071	; ????
  90:	73 00       	.word	0x0073	; ????
  92:	75 00       	.word	0x0075	; ????
  94:	77 00       	.word	0x0077	; ????
  96:	79 00       	.word	0x0079	; ????
  98:	7b 00       	.word	0x007b	; ????
  9a:	7d 00       	.word	0x007d	; ????
  9c:	7f 00       	.word	0x007f	; ????
  9e:	81 00       	.word	0x0081	; ????
  a0:	83 00       	.word	0x0083	; ????
  a2:	85 00       	.word	0x0085	; ????
  a4:	87 00       	.word	0x0087	; ????
  a6:	89 00       	.word	0x0089	; ????
  a8:	8b 00       	.word	0x008b	; ????
  aa:	8d 00       	.word	0x008d	; ????

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	d0 e4       	ldi	r29, 0x40	; 64
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	02 d0       	rcall	.+4      	; 0xbe <main>
  ba:	41 c0       	rjmp	.+130    	; 0x13e <_exit>

000000bc <__bad_interrupt>:
  bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <main>:



int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
  be:	11 b8       	out	0x01, r1	; 1
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00; // Configure port C's 8 pins as outputs,
  c4:	87 b9       	out	0x07, r24	; 7
  c6:	18 b8       	out	0x08, r1	; 8
			case 0x03:
				outputC = 0x70;
				break;
				
			case 0x04:
				outputC = 0x70;
  c8:	40 e7       	ldi	r20, 0x70	; 112
			case 0x01:
				outputC = 0x60;
				break;
				
			case 0x02:
				outputC = 0x60;
  ca:	30 e6       	ldi	r19, 0x60	; 96
	unsigned char fuelInput = 0x00;
	unsigned char beltLight = 0x00;
    while (1) 
    {
		outputC = 0x00;
		inputA = PINA;
  cc:	20 b1       	in	r18, 0x00	; 0
		fuelInput = inputA & 0x0F;
		
		switch (fuelInput) {
  ce:	e2 2f       	mov	r30, r18
  d0:	ef 70       	andi	r30, 0x0F	; 15
  d2:	8e 2f       	mov	r24, r30
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	fc 01       	movw	r30, r24
  d8:	ea 5b       	subi	r30, 0xBA	; 186
  da:	ff 4f       	sbci	r31, 0xFF	; 255
  dc:	27 c0       	rjmp	.+78     	; 0x12c <__tablejump2__>
			case 0x00:
				outputC = 0x40;
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	1d c0       	rjmp	.+58     	; 0x11c <main+0x5e>
				break;
				
			case 0x01:
				outputC = 0x60;
  e2:	83 2f       	mov	r24, r19
				break;
  e4:	1b c0       	rjmp	.+54     	; 0x11c <main+0x5e>
				
			case 0x02:
				outputC = 0x60;
  e6:	83 2f       	mov	r24, r19
				break;
  e8:	19 c0       	rjmp	.+50     	; 0x11c <main+0x5e>
			
			case 0x03:
				outputC = 0x70;
  ea:	84 2f       	mov	r24, r20
				break;
  ec:	17 c0       	rjmp	.+46     	; 0x11c <main+0x5e>
				
			case 0x04:
				outputC = 0x70;
  ee:	84 2f       	mov	r24, r20
				break;	
  f0:	15 c0       	rjmp	.+42     	; 0x11c <main+0x5e>
				
			case 0x05:
				outputC = 0x38;
  f2:	88 e3       	ldi	r24, 0x38	; 56
				break;
  f4:	13 c0       	rjmp	.+38     	; 0x11c <main+0x5e>
				
			case 0x06:
				outputC = 0x38;
  f6:	88 e3       	ldi	r24, 0x38	; 56
				break;
  f8:	11 c0       	rjmp	.+34     	; 0x11c <main+0x5e>
				
			case 0x07:
				outputC = 0x3C;
  fa:	8c e3       	ldi	r24, 0x3C	; 60
				break;
  fc:	0f c0       	rjmp	.+30     	; 0x11c <main+0x5e>
				
			case 0x08:
				outputC = 0x3C;
  fe:	8c e3       	ldi	r24, 0x3C	; 60
				break;
 100:	0d c0       	rjmp	.+26     	; 0x11c <main+0x5e>
				
			case 0x09:
				outputC = 0x3C;
 102:	8c e3       	ldi	r24, 0x3C	; 60
				break;
 104:	0b c0       	rjmp	.+22     	; 0x11c <main+0x5e>
				
			case 0x0A:
				outputC = 0x3E;
 106:	8e e3       	ldi	r24, 0x3E	; 62
				break;
 108:	09 c0       	rjmp	.+18     	; 0x11c <main+0x5e>

			case 0x0B:
				outputC = 0x3E;
 10a:	8e e3       	ldi	r24, 0x3E	; 62
				break;
 10c:	07 c0       	rjmp	.+14     	; 0x11c <main+0x5e>
				
			case 0x0C:
				outputC = 0x3E;
 10e:	8e e3       	ldi	r24, 0x3E	; 62
				break;
 110:	05 c0       	rjmp	.+10     	; 0x11c <main+0x5e>
				
			case 0x0D:
				outputC = 0x3F;
 112:	8f e3       	ldi	r24, 0x3F	; 63
				break;
 114:	03 c0       	rjmp	.+6      	; 0x11c <main+0x5e>
				
			case 0x0E:
				outputC = 0x3F;
 116:	8f e3       	ldi	r24, 0x3F	; 63
				break;
 118:	01 c0       	rjmp	.+2      	; 0x11c <main+0x5e>
				
			case 0x0F:
				outputC = 0x3F;
 11a:	8f e3       	ldi	r24, 0x3F	; 63
				break;
			}
			
			beltLight = inputA & 0x70;
			if (beltLight == 0x30) {
 11c:	20 77       	andi	r18, 0x70	; 112
 11e:	20 33       	cpi	r18, 0x30	; 48
 120:	11 f4       	brne	.+4      	; 0x126 <main+0x68>
				outputC = outputC | 0x80;
 122:	80 68       	ori	r24, 0x80	; 128
 124:	01 c0       	rjmp	.+2      	; 0x128 <main+0x6a>
			} else {
				outputC = outputC & 0x7F;
 126:	8f 77       	andi	r24, 0x7F	; 127
			}
			
			PORTC = outputC;
 128:	88 b9       	out	0x08, r24	; 8
		
			
				
				

		}
 12a:	d0 cf       	rjmp	.-96     	; 0xcc <main+0xe>

0000012c <__tablejump2__>:
 12c:	ee 0f       	add	r30, r30
 12e:	ff 1f       	adc	r31, r31
 130:	00 24       	eor	r0, r0
 132:	00 1c       	adc	r0, r0
 134:	0b be       	out	0x3b, r0	; 59
 136:	07 90       	elpm	r0, Z+
 138:	f6 91       	elpm	r31, Z
 13a:	e0 2d       	mov	r30, r0
 13c:	09 94       	ijmp

0000013e <_exit>:
 13e:	f8 94       	cli

00000140 <__stop_program>:
 140:	ff cf       	rjmp	.-2      	; 0x140 <__stop_program>
